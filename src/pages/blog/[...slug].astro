---
import { type CollectionEntry, getCollection, render } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';

export async function getStaticPaths() {
    const posts = await getCollection('blog');
    return posts.map((post) => ({
        params: { slug: post.id.split('/') },
        props: { post },
    }));
}
type Props = { post?: CollectionEntry<'blog'> };

const props = Astro.props as Props;
const slugParam = Astro.params.slug;
const slugId = Array.isArray(slugParam) ? slugParam.join('/') : slugParam;

let post = props.post;
if (!post) {
  const posts = await getCollection('blog');
  post = posts.find((p) => p.id === slugId);
}

if (!post) {
  throw new Error(`Post not found for slug: ${slugId}`);
}

const { Content } = await render(post);
---

<BlogPost 
  title={post.data.title}
  description={post.data.description}
  category={post.data.category}
  pubDate={post.data.pubDate}
  updatedDate={post.data.updatedDate}
  heroImage={post.data.heroImage}
>
	<Content />
</BlogPost>
