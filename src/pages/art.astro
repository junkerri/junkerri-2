---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Hero from '../components/Hero.astro';

// Import all artwork images
import hurt from '../assets/album art/hurt.jpg';
import easternGold from '../assets/album art/eastern-gold.jpg';
import unearthlyDelights from '../assets/album art/unearthly-delights.jpg';

import moonIsCake from '../assets/album art/moon-is-cake.jpg';
import backWhereIStarted from '../assets/album art/back-where-i-started.jpg';

import ngorongoro from '../assets/illustrations/ngorongoro.jpg';
import iGotLost from '../assets/illustrations/I-got-lost.jpg';
import everythingWasBeautiful from '../assets/illustrations/everything-was-beautiful.jpg';
import postEclipse from '../assets/illustrations/post-eclipse.jpg';
import decadence from '../assets/illustrations/decadence.jpg';
import bliss from '../assets/illustrations/bliss.JPG';
import timeAndSpace from '../assets/illustrations/time and space.JPG';
import elephantsWay from '../assets/illustrations/elephant\'s-way.JPG';
import landlockedBlues from '../assets/illustrations/landlocked-blues.JPG';

import hootinForYou from '../assets/t-shirt-design/hootin-for-you.jpg';
import terlinguaTshirt from '../assets/t-shirt-design/tshirt-design-terlingua.jpg';

import calendar2024 from '../assets/custom-calendar/custom-calendar-2024.jpg';
import calendar2023 from '../assets/custom-calendar/custom-calendar-2023.jpg';

// Real artwork data organized by categories
const artworks = [
  // Illustrations (First)
  {
    id: 1,
    title: "Ngorongoro",
    description: "Illustration inspired by my visit to the vast landscapes and wildlife of Tanzania, specifically the Ngorongoro Crater",
    image: ngorongoro,
    category: "Illustrations",
    year: "2024",
    dimensions: "Illustration"
  },
  {
    id: 2,
    title: "I Got Lost",
    description: "Illustration exploring the feeling of being lost and finding new paths",
    image: iGotLost,
    category: "Illustrations",
    year: "2024",
    dimensions: "Illustration"
  },
  {
    id: 3,
    title: "Everything Was Beautiful",
    description: "Illustration finding beauty in chaos and complexity",
    image: everythingWasBeautiful,
    category: "Illustrations",
    year: "2022",
    dimensions: "Illustration"
  },
  {
    id: 4,
    title: "Post Eclipse",
    description: "Illustration capturing the aftermath of celestial events",
    image: postEclipse,
    category: "Illustrations",
    year: "2024",
    dimensions: "Illustration"
  },
  {
    id: 5,
    title: "Decadence",
    description: "Illustration exploring themes of luxury, excess, and beauty, in a surreal landscape",
    image: decadence,
    category: "Illustrations",
    year: "2023",
    dimensions: "Illustration"
  },
  {
    id: 6,
    title: "Bliss",
    description: "Illustration capturing moments of pure joy and contentment in otherworldly landscapes",
    image: bliss,
    category: "Illustrations",
    year: "2023",
    dimensions: "Illustration"
  },
  {
    id: 7,
    title: "Time and Space",
    description: "Illustration exploring the relationship between temporal and spatial dimensions",
    image: timeAndSpace,
    category: "Illustrations",
    year: "2024",
    dimensions: "Illustration"
  },
  {
    id: 8,
    title: "Elephant's Way",
    description: "Illustration celebrating the wisdom and majesty of elephants",
    image: elephantsWay,
    category: "Illustrations",
    year: "2022",
    dimensions: "Illustration"
  },
  {
    id: 9,
    title: "Landlocked Blues",
    description: "Illustration capturing the feeling of being trapped by geography",
    image: landlockedBlues,
    category: "Illustrations",
    year: "2022",
    dimensions: "Illustration"
  },
  
  // T-Shirt Designs (Second)
  {
    id: 7,
    title: "Hootin' For You",
    description: "Collaborative t-shirt design with Raw Paw local print shop, featuring night-themed creatures that make nighttime delightful and surreal",
    image: hootinForYou,
    category: "T-Shirt Designs",
    year: "2023",
    dimensions: "T-Shirt Print"
  },
  {
    id: 8,
    title: "Terlingua T-Shirt",
    description: "Designed for the 2023 Chili Cook-off in collaboration with friend Caitlin, celebrating the yearly chili cook-off in Terlingua, Texas",
    image: terlinguaTshirt,
    category: "T-Shirt Designs",
    year: "2023",
    dimensions: "T-Shirt Design"
  },
  
  // Custom Calendars (Third)
  {
    id: 9,
    title: "Custom Calendar 2024",
    description: "Personalized calendar design for 2024 artwork that represents popular hangouts in Austin",
    image: calendar2024,
    category: "Custom Calendars",
    year: "2024",
    dimensions: "Calendar Design"
  },
  {
    id: 10,
    title: "Custom Calendar 2023",
    description: "Personalized calendar design for 2023 with custom pet portraits in Zilker Park, Austin",
    image: calendar2023,
    category: "Custom Calendars",
    year: "2023",
    dimensions: "Calendar Design"
  },
  
  // Album Art (Last)
  {
    id: 11,
    title: "Hurt",
    description: "Album artwork for 'Hurt' - exploring emotional depth through visual storytelling",
    image: hurt,
    category: "Album Art",
    year: "2024",
    dimensions: "Album Cover"
  },
  {
    id: 12,
    title: "Eastern Gold",
    description: "Album artwork for 'Eastern Gold' - capturing the essence of golden moments",
    image: easternGold,
    category: "Album Art",
    year: "2024",
    dimensions: "Album Cover"
  },
  {
    id: 13,
    title: "Unearthly Delights",
    description: "Album artwork for 'Unearthly Delights' - otherworldly visual exploration",
    image: unearthlyDelights,
    category: "Album Art",
    year: "2024",
    dimensions: "Album Cover"
  },
  {
    id: 14,
    title: "Everything Was Beautiful",
    description: "Album artwork for 'Everything Was Beautiful' - finding beauty in chaos",
    image: everythingWasBeautiful,
    category: "Album Art",
    year: "2024",
    dimensions: "Album Cover"
  },
  {
    id: 15,
    title: "Moon Is Cake",
    description: "Album artwork for 'Moon Is Cake' - whimsical cosmic imagery",
    image: moonIsCake,
    category: "Album Art",
    year: "2024",
    dimensions: "Album Cover"
  },
  {
    id: 16,
    title: "Back Where I Started",
    description: "Album artwork for 'Back Where I Started' - journey of return and reflection",
    image: backWhereIStarted,
    category: "Album Art",
    year: "2024",
    dimensions: "Album Cover"
  }
];

const categories = ["All", "Album Art", "Illustrations", "T-Shirt Designs", "Custom Calendars"];
---

<BaseLayout 
  title="Art Gallery - Junkerri"
  description="Explore Junkerri's digital art gallery featuring bold, experimental works and creative illustrations. Discover unique artistic expressions and visual storytelling."
  image={everythingWasBeautiful}
  tags={['art', 'digital art', 'illustration', 'junkerri', 'artist', 'gallery', 'creative']}
>
  <Header />
  
  <main class="art-page">
    <Hero title={["ART", "GALLERY"]} minHeight={300} />

    <!-- Filters -->
    <section class="py-2 md:py-4">
      <div class="container">
        <div class="flex flex-wrap gap-4 justify-center">
          {categories.map((category) => (
            <button
              class="category-filter px-6 py-2 rounded-full border border-input bg-background text-foreground text-sm font-medium transition-colors hover:!bg-primary hover:!text-black hover:!border-transparent focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 data-[active=true]:bg-primary data-[active=true]:!text-black data-[active=true]:border-transparent"
              data-category={category}
            >
              {category}
            </button>
          ))}
        </div>
      </div>
    </section>

    <!-- Gallery Grid -->
    <section class="py-8 md:py-12">
      <div class="container">
        <div class="columns-1 md:columns-2 lg:columns-3 gap-8 space-y-8">
          {artworks.map((artwork) => (
            <div class="group break-inside-avoid overflow-hidden rounded-lg border bg-card text-card-foreground shadow-sm hover:shadow-lg transition-all duration-300 artwork-item" data-category={artwork.category}>
              <div class="aspect-[4/3] overflow-hidden">
                <img 
                  src={typeof artwork.image === 'string' ? artwork.image : artwork.image.src} 
                  alt={artwork.title}
                  class="w-full h-full object-contain group-hover:scale-105 transition-transform duration-300 cursor-pointer"
                  data-artwork={artwork.id}
                  data-title={artwork.title}
                  data-description={artwork.description}
                />
              </div>
              <div class="p-6">
                <div class="flex items-center justify-between mb-2">
                  <span class="inline-flex items-center rounded-full bg-secondary px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2">
                    {artwork.category}
                  </span>
                  <span class="text-sm text-muted-foreground">{artwork.year}</span>
                </div>
                <h3 class="text-xl font-semibold leading-none tracking-tight mb-2">{artwork.title}</h3>
                <p class="text-sm text-muted-foreground mb-4">{artwork.description}</p>
                <div class="flex items-center justify-between">
                  <span class="text-xs text-muted-foreground">{artwork.dimensions}</span>
                  <button class="text-sm text-primary hover:underline">View Details</button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Lightbox Modal (Hidden by default) -->
    <div id="lightbox" class="fixed inset-0 bg-black/90 z-50 hidden items-center justify-center p-4">
      <div class="relative max-w-4xl w-full">
        <button id="close-lightbox" class="absolute top-4 right-4 text-white hover:text-gray-300 z-10">
          <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
          </svg>
        </button>
        <div class="max-h-[80vh] overflow-hidden rounded-lg">
          <img id="lightbox-image" src="" alt="" class="w-full h-auto max-h-[80vh] object-contain" />
        </div>
        <div id="lightbox-info" class="mt-4 text-white text-center">
          <h3 id="lightbox-title" class="text-2xl font-bold mb-2"></h3>
          <p id="lightbox-description" class="text-lg opacity-90"></p>
        </div>
      </div>
    </div>

    <!-- CTA Section -->
    <section class="py-12 md:py-16 bg-muted/30">
      <div class="container text-center">
        <h2 class="text-4xl font-bold mb-4">Interested in Commissioning?</h2>
        <p class="text-xl mb-8 text-muted-foreground">Let's create something unique together</p>
        <a href="/contact" class="btn btn-secondary btn-lg">
          Get in Touch
          <svg class="ml-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>
          </svg>
        </a>
      </div>
    </section>
  </main>

  <Footer />

  <style>
    /* Ensure active filter remains consistent with Blog */
    .category-filter[data-active="true"] {
      background-color: hsl(var(--primary)) !important;
      color: #000 !important;
      border-color: transparent !important;
    }
  </style>



  <script>

    
    // Filter functionality
    const filterButtons = document.querySelectorAll<HTMLButtonElement>('.category-filter');
    const artworkItems = document.querySelectorAll<HTMLElement>('.artwork-item[data-category]');

    function setActiveButton(active: HTMLButtonElement): void {
      filterButtons.forEach(btn => {
        btn.removeAttribute('data-active');
      });
      active.setAttribute('data-active', 'true');
    }

    function applyFilter(category: string): void {
      artworkItems.forEach((item) => {
        const isMatch = category === 'All' || item.getAttribute('data-category') === category;
        item.classList.toggle('hidden', !isMatch);
      });
      // Persist selection in URL hash (same behavior as Blog)
      history.replaceState(null, '', `#${encodeURIComponent(category)}`);
    }

    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const category = button.getAttribute('data-category');
        if (!category) return;
        setActiveButton(button);
        applyFilter(category);
      });
    });

    // Initialize from URL hash if present (same as Blog)
    const initial = decodeURIComponent((location.hash?.replace('#','') || 'All'));
    const initialButton = Array.from(filterButtons).find((btn) => btn.getAttribute('data-category') === initial) 
      || Array.from(filterButtons).find((btn) => btn.getAttribute('data-category') === 'All');
    if (initialButton) {
      setActiveButton(initialButton);
      applyFilter(initial);
    }

    // Lightbox functionality
    const lightbox = document.getElementById('lightbox');
    const lightboxImage = document.getElementById('lightbox-image') as HTMLImageElement | null;
    const lightboxTitle = document.getElementById('lightbox-title') as HTMLElement | null;
    const lightboxDescription = document.getElementById('lightbox-description') as HTMLElement | null;
    const closeLightbox = document.getElementById('close-lightbox');

    // Real artwork data for lightbox
    // Build lightbox data directly from the artworks array to avoid mismatches
    const artworkData: Record<string, { title: string; description: string }> = {};
    Array.from(document.querySelectorAll('[data-artwork]')).forEach((imgEl) => {
      const id = imgEl.getAttribute('data-artwork');
      const title = imgEl.getAttribute('data-title') || '';
      const description = imgEl.getAttribute('data-description') || '';
      if (id) artworkData[id] = { title, description };
    });

    // Add click handlers to artwork images
    document.querySelectorAll<HTMLImageElement>('[data-artwork]').forEach((img) => {
      img.addEventListener('click', () => {
        const artworkId = img.getAttribute('data-artwork');
        if (!artworkId || !lightbox || !lightboxImage || !lightboxTitle || !lightboxDescription) return;

        const artwork = artworkData[artworkId] || { title: img.getAttribute('data-title') || '', description: img.getAttribute('data-description') || '' };
        if (!artwork) return;

        lightboxImage.src = img.src;
        lightboxImage.alt = artwork.title;
        lightboxTitle.textContent = artwork.title;
        lightboxDescription.textContent = artwork.description;
        lightbox.classList.remove('hidden');
        lightbox.classList.add('flex');
      });
    });

    // Close lightbox
    if (closeLightbox) {
      closeLightbox.addEventListener('click', () => {
        if (lightbox) {
          lightbox.classList.add('hidden');
          lightbox.classList.remove('flex');
        }
      });
    }

    // Close lightbox on background click
    if (lightbox) {
      lightbox.addEventListener('click', (e) => {
        if (e.target === lightbox) {
          lightbox.classList.add('hidden');
          lightbox.classList.remove('flex');
        }
      });
    }

    // Close lightbox on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && lightbox && !lightbox.classList.contains('hidden')) {
        lightbox.classList.add('hidden');
        lightbox.classList.remove('flex');
      }
    });
  </script>
</BaseLayout>
