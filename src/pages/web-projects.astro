---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { Image } from 'astro:assets';
import pulseCoop from '../assets/pulse-coop.jpg';
import beatkerri from '../assets/beatkerri.jpg';

// Web projects data
const projects = [
  {
    id: 1,
    title: "Pulse COOP",
    description: "A worker-owned tech cooperative website for creatives, musicians, and web technologists based in Austin, TX. Features democratic decision-making, community empowerment, and sustainable practices.",
    tech: ["Astro", "React", "Tailwind CSS", "TypeScript", "Vercel"],
    image: pulseCoop,
    liveUrl: "https://pulse-coop.vercel.app/",
    githubUrl: "https://github.com/junkerri/pulse-coop",
    category: "Business Web App",
    featured: true
  },
  {
    id: 2,
    title: "Beatkerri",
    description: "A 16-step digital sequencer and beat-making web application with challenge mode, jam mode, and daily beat challenges. Features an intuitive interface for creating and sharing beats.",
    tech: ["TypeScript", "React", "Web Audio API", "Canvas API", "Vercel"],
    image: beatkerri,
    liveUrl: "https://www.beatkerri.com/",
    githubUrl: "https://github.com/junkerri/beatkerri",
    category: "Creative Web App"
  },
  {
    id: 3,
    title: "Junkerri Portfolio",
    description: "A multidisciplinary artist and musician portfolio website built with Astro, featuring music, art, web projects, and creative work. Includes a dark cyberpunk aesthetic, interactive animations, responsive design, and content collections for blog posts.",
    tech: ["Astro", "React", "Tailwind CSS", "TypeScript", "Vercel"],
    image: beatkerri, // Using beatkerri image as placeholder - you can add a specific portfolio image later
    liveUrl: "https://junkerri-2.vercel.app/",
    githubUrl: "https://github.com/junkerri/junkerri-2",
    category: "Personal Portfolio"
  }
];

const categories = ["All", "Creative Web App", "Business Web App", "Personal Portfolio"];
const featuredProject = projects.find(p => p.featured) || projects[0];
---

<BaseLayout title="Web Projects - Junkerri" description="Interactive web projects and creative coding experiments">
  <Header />
  
  <main class="web-projects-page min-h-screen">
    <!-- Hero Section -->
    <section class="py-20 bg-gradient-to-b from-background to-muted/20">
      <div class="container">
        <div class="text-center space-y-6">
          <h1 class="text-4xl md:text-6xl font-bold tracking-tight">
            Web Projects
          </h1>
          <p class="text-xl text-muted-foreground max-w-3xl mx-auto">
            Interactive web experiences, creative coding experiments, and innovative digital solutions.
          </p>
        </div>
      </div>
    </section>

    <!-- Filters -->
    <section class="py-8 border-b">
      <div class="container">
        <div class="flex flex-wrap gap-4 justify-center">
          {categories.map((category) => (
            <button 
              class="btn btn-outline btn-sm"
              data-category={category}
            >
              {category}
            </button>
          ))}
        </div>
      </div>
    </section>

    <!-- Projects Grid -->
    <section class="py-16">
      <div class="container">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {projects.map((project) => (
            <div class="card group" data-category={project.category}>
              <div class="aspect-video overflow-hidden rounded-t-lg">
                <Image 
                  src={project.image} 
                  alt={project.title}
                  class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                  width={400}
                  height={225}
                />
              </div>
              <div class="card-content">
                <div class="flex items-center justify-between mb-2">
                  <span class="badge badge-outline">
                    {project.category}
                  </span>
                </div>
                <h3 class="text-xl font-semibold mb-2">{project.title}</h3>
                <p class="text-muted-foreground mb-4">{project.description}</p>
                
                <div class="flex flex-wrap gap-2 mb-4">
                  {project.tech.map((tech) => (
                    <span class="badge badge-secondary">
                      {tech}
                    </span>
                  ))}
                </div>
                
                <div class="flex gap-2">
                  <a 
                    href={project.liveUrl} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    class="btn btn-primary btn-sm"
                  >
                    Live Demo
                  </a>
                  <a 
                    href={project.githubUrl} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    class="btn btn-outline btn-sm"
                  >
                    GitHub
                  </a>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Featured Project -->
    <section class="py-16 bg-muted/30">
      <div class="container">
        <div class="text-center mb-12">
          <h2 class="text-3xl font-bold mb-4">Featured Project</h2>
          <p class="text-muted-foreground max-w-2xl mx-auto">Latest collaborative work</p>
        </div>

        <div class="max-w-6xl mx-auto">
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
            <div class="space-y-6">
              <div>
                <span class="badge badge-outline mb-3">
                  {featuredProject.category}
                </span>
                <h3 class="text-3xl font-bold mb-4">{featuredProject.title}</h3>
                <p class="text-lg text-muted-foreground mb-6">{featuredProject.description}</p>
              </div>
              
              <div class="flex flex-wrap gap-2 mb-6">
                {featuredProject.tech.map((tech) => (
                  <span class="badge badge-secondary">
                    {tech}
                  </span>
                ))}
              </div>
              
              <div class="flex gap-4">
                <a 
                  href={featuredProject.liveUrl} 
                  target="_blank" 
                  rel="noopener noreferrer"
                  class="btn btn-primary btn-lg"
                >
                  Visit Site
                </a>
                <a 
                  href={featuredProject.githubUrl} 
                  target="_blank" 
                  rel="noopener noreferrer"
                  class="btn btn-outline btn-lg"
                >
                  View Code
                </a>
              </div>
            </div>
            
            <div class="aspect-video overflow-hidden rounded-2xl bg-muted">
              <Image 
                src={featuredProject.image} 
                alt={featuredProject.title}
                class="w-full h-full object-cover"
                width={600}
                height={338}
              />
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <section class="py-16 bg-primary text-primary-foreground">
      <div class="container text-center">
        <h2 class="text-3xl font-bold mb-4">Interested in Collaboration?</h2>
        <p class="text-xl mb-8 max-w-2xl mx-auto opacity-90">
          Let's create something amazing together
        </p>
        <a href="/contact" class="btn btn-secondary btn-lg">
          Get in Touch
        </a>
      </div>
    </section>
  </main>

  <Footer />

  <script>
    // Filter functionality
    const filterButtons = document.querySelectorAll('[data-category]');
    const projectItems = document.querySelectorAll('.card[data-category]'); // Only select project cards, not filter buttons

    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const category = button.getAttribute('data-category') || '';
        
        // Update active button
        filterButtons.forEach(btn => {
          if (btn instanceof HTMLElement) {
            btn.classList.remove('bg-primary', 'text-primary-foreground');
            btn.classList.add('btn-outline');
          }
        });
        if (button instanceof HTMLElement) {
          button.classList.remove('btn-outline');
          button.classList.add('bg-primary', 'text-primary-foreground');
        }
        
        // Filter projects
        projectItems.forEach(item => {
          if (item instanceof HTMLElement) {
            const itemCategory = item.getAttribute('data-category') || '';
            if (category === 'All' || itemCategory === category) {
              item.style.display = 'block';
            } else {
              item.style.display = 'none';
            }
          }
        });
      });
    });

    // Set initial active state
    const allButton = document.querySelector('[data-category="All"]');
    if (allButton instanceof HTMLElement) {
      allButton.classList.remove('btn-outline');
      allButton.classList.add('bg-primary', 'text-primary-foreground');
    }
  </script>
</BaseLayout>
